Dataset: CIFAR-10
CIFAR-10 is grey scale but the code can work for RGB images also.
Language: Python
Library: Numpy
Kernel: 2 kernel of 3*3
Stride: flexible
Channels: 3
Images: 60000 ( divided into batches of 1000)
The assignment has been divided into two modules.
1. Feedforward.
2. Backpropagation.



Feedforward:
Image Batches​ : The batch of 1000 images is taken and 2, 3*3 kernels are applied on this.
Convolution​ : The convolution is done using fromFunction as discussed in class.
Relu​ : This is the activation function. If value after convolution is negative then it will turn into
zero else remains as it is.
Average Pooling​ : 2*2 pooling is done using fromFunction.
Fully connected Layer​ : It will have 10 neurons because there are 10 classes. Initially random
weights are taken which will be updated using backpropagation. Output of this will be the vector
of size 10.
Soft max​ : It is a multiclass classifier. It will give probabilities corresponding to each class.
Loss:​ cross entropy loss is used to calculate loss. Using this we will backpropagate to update
weights and filters.



Back Propagation:
Initially random weights and kernel have been taken. It is required to update both after
calculation of loss.
The idea of backpropagation is to update weights and kernel.
Various equations were derived as a part of work.

